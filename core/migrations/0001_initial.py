# Generated by Django 5.1.3 on 2024-12-09 14:29

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('año', models.PositiveIntegerField()),
                ('patente', models.CharField(max_length=10, unique=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('puertas', models.PositiveIntegerField()),
                ('precio_dia', models.PositiveIntegerField()),
                ('kilometraje', models.PositiveIntegerField()),
                ('estado_auto', models.CharField(choices=[('disponible', 'Disponible'), ('reservado', 'Reservado'), ('rentado', 'Rentado'), ('mantenimiento', 'Mantenimiento'), ('no_disponible', 'No Disponible')], default='disponible', max_length=20)),
                ('combustible', models.CharField(choices=[('gasolina', 'Gasolina'), ('diesel', 'Diesel'), ('electrico', 'Electrico')], default='Gasolina', max_length=50)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='autos_imagenes/')),
            ],
        ),
        migrations.CreateModel(
            name='Nosotros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('contenido', models.TextField()),
                ('mision', models.TextField()),
                ('vision', models.TextField()),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Politica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SeguroBasico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='Seguro Básico', max_length=100)),
                ('descripcion', models.TextField()),
                ('precio', models.PositiveIntegerField()),
                ('deducible', models.CharField(max_length=50)),
                ('coberturas', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Trabajador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('rut', models.CharField(help_text='Ingrese el RUT en formato XX.XXX.XXX-Y', max_length=12, unique=True)),
                ('cargo', models.CharField(blank=True, help_text='Cargo del trabajador (opcional)', max_length=50, null=True)),
                ('telefono', models.CharField(blank=True, help_text='Teléfono del trabajador (opcional)', max_length=15, null=True)),
                ('email', models.EmailField(blank=True, help_text='Correo electrónico del trabajador (opcional)', max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('tipo_usuario', models.CharField(choices=[('cliente', 'Cliente'), ('trabajador', 'Trabajador'), ('administrador', 'Administrador')], default='cliente', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'custom_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('rut', models.CharField(max_length=12, unique=True, validators=[core.models.validar_rut])),
                ('fecha_nac', models.DateField(blank=True, null=True, verbose_name='Fecha nacimiento')),
                ('region', models.CharField(choices=[('V', 'Región de Valparaíso'), ('RM', 'Región Metropolitana'), ('I', 'Región de Tarapacá'), ('II', 'Región de Antofagasta'), ('III', 'Región de Atacama'), ('IV', 'Región de Coquimbo'), ('VI', 'Región del Libertador General Bernardo O’Higgins'), ('VII', 'Región del Maule'), ('VIII', 'Región del Biobío'), ('IX', 'Región de La Araucanía'), ('X', 'Región de Los Lagos'), ('XI', 'Región de Aysén del General Carlos Ibáñez del Campo'), ('XII', 'Región de Magallanes y de la Antártica Chilena'), ('XIV', 'Región de Los Ríos'), ('XV', 'Región de Arica y Parinacota'), ('XVI', 'Región de Ñuble')], default='Región de Valparaiso', max_length=50)),
                ('ciudad', models.CharField(max_length=50)),
                ('licencia_conducir', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='La licencia debe seguir el formato X-XXXXX-XXX, por ejemplo: B-K23YT-6H8', regex='^[A-Za-z]-[A-Za-z0-9]{5}-[A-Za-z0-9]{3}$')])),
                ('telefono', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=100)),
                ('direccion', models.CharField(max_length=100)),
                ('estado_cliente', models.CharField(choices=[('inactivo', 'Inactivo'), ('con_reserva', 'Con Reserva'), ('rentando', 'Rentando')], default='inactivo', max_length=12)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='clientes_imagenes/')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_reserva', models.CharField(editable=False, max_length=10, unique=True)),
                ('fecha_reserva', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_inicio', models.DateField()),
                ('fecha_retorno', models.DateField()),
                ('precio_total', models.PositiveIntegerField(blank=True, null=True)),
                ('estado_reserva', models.CharField(choices=[('activa', 'Activa'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('pagada', 'Pagada')], default='activa', max_length=20)),
                ('auto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='core.auto')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='core.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_factura', models.CharField(default=core.models.generar_codigo_factura, max_length=10, unique=True)),
                ('total', models.PositiveIntegerField()),
                ('fecha_emision', models.DateField()),
                ('metodo_pago', models.CharField(choices=[('Tarjeta Crédito', 'Tarjeta Crédito'), ('Tarjeta Debito', 'Tarjeta Debito'), ('Transferencia Bancaria', 'Transferencia Bancaria'), ('Efectivo', 'Efectivo'), ('Otro', 'Otro')], default='Tarjeta Debito', max_length=50)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cliente')),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.reserva')),
            ],
        ),
    ]
